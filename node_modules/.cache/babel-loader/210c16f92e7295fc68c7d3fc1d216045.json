{"ast":null,"code":"import _classCallCheck from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\src\\\\components\\\\allbooks.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { UpdateBook, DeleteBook } from '../actions/index';\nimport EditBook from './EditBook';\nimport * as bookAction from '../actions/index';\n\nvar BooksRecord =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BooksRecord, _Component);\n\n  function BooksRecord(props, context) {\n    _classCallCheck(this, BooksRecord);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BooksRecord).call(this, props, context));\n  }\n\n  _createClass(BooksRecord, [{\n    key: \"booklist\",\n    value: function booklist() {\n      var _this = this;\n\n      if (this.props.books.length > 0) {\n        return this.props.books.map(function (book) {\n          if (book.editing === true) {\n            // eslint-disable-next-line no-unused-expressions\n            return React.createElement(EditBook, {\n              book: book,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            });\n          } else {\n            return React.createElement(\"tr\", {\n              key: book.id //onClick={() => this.props.selectBook(book)}\n              ,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28\n              },\n              __self: this\n            }, _this.props.books.length), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29\n              },\n              __self: this\n            }, book.booktitle), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, book.cover), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }, book.author), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32\n              },\n              __self: this\n            }, book.publisher), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33\n              },\n              __self: this\n            }, \"  \", React.createElement(\"button\", {\n              onClick: _this.props.EditBook(book.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33\n              },\n              __self: this\n            }, \"Edit\"), React.createElement(\"button\", {\n              onClick: function onClick(e) {\n                return _this.deleteContact(e, book.id);\n              },\n              className: \"btn btn-danger\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33\n              },\n              __self: this\n            }, \"Delete\")));\n          }\n        });\n      } else {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"No Record Exist\")));\n      }\n    }\n  }, {\n    key: \"deleteContact\",\n    value: function deleteContact(e, id) {\n      e.preventDefault();\n      this.props.DeleteBook(id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"BookRecord\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Sr No\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Book Title\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Cover\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Author\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Publisher\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.booklist())));\n    }\n  }]);\n\n  return BooksRecord;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    books: state.bookReducer\n  };\n}; // function mapStateToProps(state) {\n//     return {\n//         books: state.books\n//     };\n// }\n// function matchDispatchToProps(dispatch){\n//     return bindActionCreators({UpdateBook: UpdateBook,DeleteBook:DeleteBook}, dispatch);\n//      //  { createContact: contact => dispatch(contactAction.createContact(contact)) }\n// }\n\n\nvar matchDispatchToProps = function matchDispatchToProps(dispatch) {\n  return {\n    DeleteBook: function DeleteBook(index) {\n      return dispatch(bookAction.DeleteBook(index));\n    },\n    UpdateBook: function UpdateBook(index) {\n      return dispatch(bookAction.UpdateBook(index));\n    },\n    EditBook: function EditBook(index) {\n      return dispatch(bookAction.EditBook(index));\n    } //  selectBook:book=>dispatch(bookAction.selectBook(book))\n    // bindActionCreators({DeleteBook: DeleteBook,selectBook:selectBook}, dispatch) \n\n  };\n};\n\nexport default connect(mapStateToProps, matchDispatchToProps)(BooksRecord);","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app\\src\\components\\allbooks.jsx"],"names":["React","Component","connect","bindActionCreators","UpdateBook","DeleteBook","EditBook","bookAction","BooksRecord","props","context","books","length","map","book","editing","id","booktitle","cover","author","publisher","e","deleteContact","preventDefault","booklist","mapStateToProps","state","ownProps","bookReducer","matchDispatchToProps","dispatch","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {UpdateBook,DeleteBook} from '../actions/index';\r\n\r\nimport EditBook from './EditBook';\r\n\r\nimport * as bookAction from '../actions/index';\r\nclass BooksRecord extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n    }\r\n  \r\n   \r\n\r\n   booklist(){\r\n       if(this.props.books.length>0){\r\n    return this.props.books.map((book)=>{\r\n        if(book.editing===true){\r\n           // eslint-disable-next-line no-unused-expressions\r\n          return <EditBook book={book}/>\r\n       } else {\r\n       return (\r\n        <tr\r\n            key={book.id}\r\n            //onClick={() => this.props.selectBook(book)}\r\n        > \r\n        <td>{this.props.books.length}</td>\r\n          <td>{book.booktitle}</td>\r\n          <td>{book.cover}</td>\r\n          <td>{book.author}</td>\r\n          <td>{book.publisher}</td>\r\n          <td>  <button onClick={this.props.EditBook(book.id)}>Edit</button><button  onClick={(e) => this.deleteContact(e, book.id)} className=\"btn btn-danger\">Delete</button></td>\r\n        </tr>\r\n    );\r\n       }\r\n    })\r\n}\r\nelse{\r\n    return <tr>\r\n        <td><h4>No Record Exist\r\n          </h4>\r\n            </td></tr>;\r\n}       \r\n   }\r\n   deleteContact(e, id){\r\n    e.preventDefault();\r\n    this.props.DeleteBook(id);\r\n  }\r\n    render() { \r\n        return ( <div>\r\n            <table className=\"BookRecord\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>Sr No</td>\r\n                        <td>Book Title</td>\r\n                        <td>Cover</td>\r\n                        <td>Author</td>\r\n                        <td>Publisher</td>\r\n                        <td>Action</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.booklist()}\r\n                </tbody>\r\n            </table>\r\n        </div> );\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        books: state.bookReducer\r\n    }\r\n  };\r\n// function mapStateToProps(state) {\r\n//     return {\r\n//         books: state.books\r\n//     };\r\n// }\r\n// function matchDispatchToProps(dispatch){\r\n//     return bindActionCreators({UpdateBook: UpdateBook,DeleteBook:DeleteBook}, dispatch);\r\n//      //  { createContact: contact => dispatch(contactAction.createContact(contact)) }\r\n   \r\n    \r\n// }\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return {        \r\n      DeleteBook: index =>dispatch(bookAction.DeleteBook(index)),\r\n      UpdateBook:index =>dispatch(bookAction.UpdateBook(index)),      \r\n      EditBook:index =>dispatch(bookAction.EditBook(index)),\r\n    //  selectBook:book=>dispatch(bookAction.selectBook(book))\r\n     // bindActionCreators({DeleteBook: DeleteBook,selectBook:selectBook}, dispatch) \r\n    }\r\n  };\r\nexport default connect(mapStateToProps,matchDispatchToProps)(BooksRecord);"]},"metadata":{},"sourceType":"module"}