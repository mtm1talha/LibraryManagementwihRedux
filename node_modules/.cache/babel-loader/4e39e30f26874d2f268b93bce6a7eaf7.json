{"ast":null,"code":"import _classCallCheck from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\src\\\\components\\\\EditBook\\\\EditBookComponent.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as bookAction from '../../actions/index';\nvar book = this.props.book;\n\nvar EditBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBook, _Component);\n\n  function EditBook(props) {\n    var _this;\n\n    _classCallCheck(this, EditBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditBook).call(this, props));\n    _this.state = {\n      id: book.id,\n      booktitle: book.booktitle,\n      cover: book.cover,\n      authorname: book.author,\n      publishername: book.publisher,\n      date: book.date\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditBook, [{\n    key: \"handleChangeBookTitle\",\n    value: function handleChangeBookTitle(e) {\n      this.setState({\n        booktitle: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeCover\",\n    value: function handleChangeCover(e) {\n      this.setState({\n        cover: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeAuthor\",\n    value: function handleChangeAuthor(e) {\n      this.setState({\n        authorname: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangePublisher\",\n    value: function handleChangePublisher(e) {\n      this.setState({\n        publishername: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeDate\",\n    value: function handleChangeDate(e) {\n      this.setState({\n        date: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var book = {\n        id: this.props.book.id,\n        booktitle: this.state.booktitle,\n        cover: this.state.cover,\n        author: this.state.authorname,\n        publisher: this.state.publishername,\n        date: this.state.date\n      };\n      this.props.UpdateBook(book);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"tr\", {\n        key: this.state.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangeBookTitle.bind(this),\n        id: \"bookname\",\n        value: this.state.booktitle,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangeCover.bind(this),\n        id: \"covername\",\n        value: this.state.cover,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangeAuthor.bind(this),\n        id: \"authorname\",\n        value: this.state.authorname,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangePublisher.bind(this),\n        id: \"publishername\",\n        value: this.state.publishername,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"  \", React.createElement(\"button\", {\n        onClick: function onClick(e, val) {\n          return _this2.handleSubmit(e, val);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Update\")));\n    }\n  }]);\n\n  return EditBook;\n}(Component);\n\nvar matchDispatchToProps = function matchDispatchToProps(dispatch) {\n  return {\n    UpdateBook: function UpdateBook(index) {\n      return dispatch(bookAction.UpdateBook(index));\n    }\n  };\n};\n\nexport default connect(null, matchDispatchToProps)(EditBook);","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app-New\\src\\components\\EditBook\\EditBookComponent.jsx"],"names":["React","Component","connect","bookAction","book","props","EditBook","state","id","booktitle","cover","authorname","author","publishername","publisher","date","handleSubmit","bind","e","setState","target","value","event","preventDefault","UpdateBook","handleChangeBookTitle","handleChangeCover","handleChangeAuthor","handleChangePublisher","val","matchDispatchToProps","dispatch","index"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as bookAction from '../../actions/index';\r\n\r\nconst book=this.props.book;\r\nclass EditBook extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: book.id,\r\n            booktitle: book.booktitle,\r\n            cover: book.cover,\r\n            authorname: book.author,\r\n            publishername:book.publisher,\r\n            date: book.date\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChangeBookTitle(e) {\r\n        this.setState({\r\n            booktitle: e.target.value\r\n        })\r\n    }\r\n    handleChangeCover(e) {\r\n        this.setState({\r\n            cover: e.target.value,\r\n        })\r\n    }\r\n    handleChangeAuthor(e) {\r\n        this.setState({\r\n            authorname: e.target.value,\r\n        })\r\n    }\r\n    handleChangePublisher(e) {\r\n        this.setState({\r\n            publishername: e.target.value,\r\n        })\r\n    }\r\n    handleChangeDate(e) {\r\n        this.setState({\r\n            date: e.target.value\r\n        })\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let book = {\r\n            id: this.props.book.id,\r\n            booktitle: this.state.booktitle,\r\n            cover: this.state.cover,\r\n            author: this.state.authorname,\r\n            publisher: this.state.publishername,\r\n            date: this.state.date\r\n        }\r\n        this.props.UpdateBook(book);\r\n    }\r\n    render() {\r\n        return (\r\n            <tr\r\n                key={this.state.id}>\r\n                <td></td>\r\n                <td>\r\n                    <input type=\"text\" onChange={this.handleChangeBookTitle.bind(this)} id=\"bookname\" value={this.state.booktitle} required />\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" onChange={this.handleChangeCover.bind(this)} id=\"covername\" value={this.state.cover} required />\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" onChange={this.handleChangeAuthor.bind(this)} id=\"authorname\" value={this.state.authorname} required />\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" onChange={this.handleChangePublisher.bind(this)} id=\"publishername\" value={this.state.publishername} required />\r\n                </td>\r\n                <td>  <button onClick={(e, val) => this.handleSubmit(e, val)}>Update</button></td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return {\r\n        UpdateBook: index => dispatch(bookAction.UpdateBook(index)),\r\n    }\r\n};\r\nexport default connect(null, matchDispatchToProps)(EditBook);"]},"metadata":{},"sourceType":"module"}