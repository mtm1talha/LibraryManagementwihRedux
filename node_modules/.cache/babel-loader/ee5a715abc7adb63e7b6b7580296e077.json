{"ast":null,"code":"import _classCallCheck from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\src\\\\components\\\\AllBooks\\\\Data.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EditBook from '../EditBook/EditBookComponent';\nimport BlankState from './BlankState';\nimport * as bookAction from '../../actions/index';\nimport { fetchBooks } from '../../actions/index';\nimport { bindActionCreators } from 'redux';\n\nvar Data =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Data, _Component);\n\n  function Data(props) {\n    var _this;\n\n    _classCallCheck(this, Data);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Data).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Data, [{\n    key: \"deleteBook\",\n    value: function deleteBook(e, id) {\n      e.preventDefault();\n      this.props.DeleteBook(id);\n    }\n  }, {\n    key: \"editBook\",\n    value: function editBook(e, id) {\n      e.preventDefault();\n      this.props.EditBook(id);\n    } // componentDidMount() {\n    //     bookAction.getRecord();\n    //  }\n    // componentDidMount() {\n    //      console.log(\"mountcomponent\",fetchBooks())\n    //      const { dispatch } = this.props;\n    //     dispatch(fetchBooks());\n    //     // fetchBooks();\n    //   }\n    // componentDidMount() {\n    //     this.props.dispatch(fetchBooks);\n    //   }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var AllBookRecord = this.props.books;\n      var FilteredBookRecord = this.props.filteredrecord;\n\n      if (AllBookRecord.length > 0) {\n        if (this.props.searchvalue) {\n          return FilteredBookRecord.map(function (book) {\n            if (book.editing === true) {\n              // eslint-disable-next-line no-unused-expressions\n              return React.createElement(EditBook, {\n                book: book,\n                key: book.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 44\n                },\n                __self: this\n              });\n            } else {\n              return React.createElement(\"tr\", {\n                key: book.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 46\n                },\n                __self: this\n              }, React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 50\n                },\n                __self: this\n              }, book.booktitle), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 51\n                },\n                __self: this\n              }, book.cover), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 52\n                },\n                __self: this\n              }, book.author), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 53\n                },\n                __self: this\n              }, book.publisher), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54\n                },\n                __self: this\n              }, \"  \", React.createElement(\"button\", {\n                onClick: function onClick(e) {\n                  return _this2.editBook(e, book.id);\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54\n                },\n                __self: this\n              }, \"Edit\"), React.createElement(\"button\", {\n                onClick: function onClick(e) {\n                  return _this2.deleteBook(e, book.id);\n                },\n                className: \"btn btn-danger\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54\n                },\n                __self: this\n              }, \"Delete\")));\n            }\n          });\n        } else {\n          return AllBookRecord.map(function (book) {\n            if (book.editing === true) {\n              // eslint-disable-next-line no-unused-expressions\n              return React.createElement(EditBook, {\n                book: book,\n                key: book.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 67\n                },\n                __self: this\n              });\n            } else {\n              return React.createElement(\"tr\", {\n                key: book.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 69\n                },\n                __self: this\n              }, React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 73\n                },\n                __self: this\n              }, book.booktitle), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 74\n                },\n                __self: this\n              }, book.cover), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75\n                },\n                __self: this\n              }, book.author), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76\n                },\n                __self: this\n              }, book.publisher), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77\n                },\n                __self: this\n              }, \"  \", React.createElement(\"button\", {\n                onClick: function onClick(e) {\n                  return _this2.editBook(e, book.id);\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77\n                },\n                __self: this\n              }, \"Edit\"), React.createElement(\"button\", {\n                onClick: function onClick(e) {\n                  return _this2.deleteBook(e, book.id);\n                },\n                className: \"btn btn-danger\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77\n                },\n                __self: this\n              }, \"Delete\")));\n            }\n          });\n        }\n      } else return React.createElement(BlankState, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Data;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    books: state.books.books,\n    filteredrecord: state.books.filteredbook,\n    searchvalue: state.books.searchvalue\n  };\n};\n\nvar matchDispatchToProps = function matchDispatchToProps(dispatch) {\n  return {\n    DeleteBook: function DeleteBook(index) {\n      return dispatch(bookAction.DeleteBook(index));\n    },\n    EditBook: function EditBook(index) {\n      return dispatch(bookAction.EditBook(index));\n    },\n    fetchBooks: fetchBooks // DeleteBook: () => {\n    //     dispatch(bookAction.DeleteBook)\n    //   },\n    //   EditBook: () => {\n    //     dispatch(bookAction.EditBook)\n    //   },\n    // getRecord: dispatch(bookAction.getRecord())\n    //  getRecord:index =>dispatch(bookAction.getRecord(index))\n\n  };\n}; // const mapDispatchToProps = (dispatch) => {\n//     return bindActionCreators({\n//         DeleteBook:bookAction.DeleteBook,\n//         EditBook:bookAction.EditBook\n//     },dispatch);\n//     }\n// export default connect(mapStateToProps, (matchDispatchToProps,fetchBooks))(Data);\n\n\nexport default connect(mapStateToProps, (matchDispatchToProps, fetchBooks))(Data);","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app-New\\src\\components\\AllBooks\\Data.jsx"],"names":["React","Component","connect","EditBook","BlankState","bookAction","fetchBooks","bindActionCreators","Data","props","state","e","id","preventDefault","DeleteBook","AllBookRecord","books","FilteredBookRecord","filteredrecord","length","searchvalue","map","book","editing","booktitle","cover","author","publisher","editBook","deleteBook","mapStateToProps","ownProps","filteredbook","matchDispatchToProps","dispatch","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EditBook from '../EditBook/EditBookComponent';\r\nimport BlankState from './BlankState';\r\nimport * as bookAction from '../../actions/index'\r\nimport { fetchBooks }from '../../actions/index'; \r\nimport { bindActionCreators } from 'redux';\r\nclass Data extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    \r\n    deleteBook(e, id) {\r\n        e.preventDefault();\r\n        this.props.DeleteBook(id);\r\n    }\r\n    editBook(e, id) {\r\n        e.preventDefault();       \r\n        this.props.EditBook(id);\r\n    }\r\n    // componentDidMount() {\r\n    //     bookAction.getRecord();\r\n    //  }\r\n    // componentDidMount() {\r\n    //      console.log(\"mountcomponent\",fetchBooks())\r\n    //      const { dispatch } = this.props;\r\n    //     dispatch(fetchBooks());\r\n    //     // fetchBooks();\r\n    //   }\r\n    // componentDidMount() {\r\n    //     this.props.dispatch(fetchBooks);\r\n    //   }\r\n    render() {\r\n        const AllBookRecord=this.props.books;\r\n        const FilteredBookRecord=this.props.filteredrecord        \r\n        if (AllBookRecord.length > 0) {\r\n            if(this.props.searchvalue){\r\n                return (\r\n               \r\n                    FilteredBookRecord.map((book) => {\r\n                        if(book.editing===true){\r\n                            // eslint-disable-next-line no-unused-expressions\r\n                           return <EditBook book={book} key={book.id}/>\r\n                        } else {\r\n                        return (<tr\r\n                            key={book.id}\r\n                        >\r\n                            {/* <td>{this.props.books.length}</td> */}\r\n                            <td>{book.booktitle}</td>\r\n                            <td>{book.cover}</td>\r\n                            <td>{book.author}</td>\r\n                            <td>{book.publisher}</td>\r\n                            <td>  <button onClick={(e) => this.editBook(e, book.id)}>Edit</button><button onClick={(e) => this.deleteBook(e, book.id)} className=\"btn btn-danger\">Delete</button></td>\r\n                            \r\n                        </tr>);}\r\n                    })\r\n                    \r\n                ) \r\n            }\r\n            else{\r\n                return (\r\n               \r\n                    AllBookRecord.map((book) => {\r\n                        if(book.editing===true){\r\n                            // eslint-disable-next-line no-unused-expressions\r\n                           return <EditBook book={book} key={book.id}/>\r\n                        } else {\r\n                        return (<tr\r\n                            key={book.id}\r\n                        >\r\n                            {/* <td>{this.props.books.length}</td> */}\r\n                            <td>{book.booktitle}</td>\r\n                            <td>{book.cover}</td>\r\n                            <td>{book.author}</td>\r\n                            <td>{book.publisher}</td>\r\n                            <td>  <button onClick={(e) => this.editBook(e, book.id)}>Edit</button><button onClick={(e) => this.deleteBook(e, book.id)} className=\"btn btn-danger\">Delete</button></td>\r\n                            \r\n                        </tr>);}\r\n                    })\r\n                    \r\n                )\r\n            }\r\n           \r\n        }\r\n        else return <BlankState />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    \r\n    return {\r\n        books:state.books.books,        \r\n        filteredrecord:state.books.filteredbook,\r\n        searchvalue:state.books.searchvalue\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return {\r\n         DeleteBook: index => dispatch(bookAction.DeleteBook(index)),\r\n         EditBook: index => dispatch(bookAction.EditBook(index)),fetchBooks\r\n        \r\n        // DeleteBook: () => {\r\n        //     dispatch(bookAction.DeleteBook)\r\n        //   },\r\n        //   EditBook: () => {\r\n        //     dispatch(bookAction.EditBook)\r\n        //   },\r\n       // getRecord: dispatch(bookAction.getRecord())\r\n      //  getRecord:index =>dispatch(bookAction.getRecord(index))\r\n        \r\n    }\r\n};\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return bindActionCreators({\r\n//         DeleteBook:bookAction.DeleteBook,\r\n//         EditBook:bookAction.EditBook\r\n//     },dispatch);\r\n//     }\r\n\r\n\r\n// export default connect(mapStateToProps, (matchDispatchToProps,fetchBooks))(Data);\r\nexport default connect(mapStateToProps, (matchDispatchToProps,fetchBooks))(Data);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}