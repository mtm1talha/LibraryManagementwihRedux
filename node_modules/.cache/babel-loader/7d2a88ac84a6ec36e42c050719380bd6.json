{"ast":null,"code":"import _classCallCheck from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\src\\\\components\\\\AllBooks\\\\Data.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EditBook from '../EditBook/EditBookComponent';\nimport BlankState from './BlankState';\nimport * as bookAction from '../../actions/index';\n\nvar Data =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Data, _Component);\n\n  function Data(props) {\n    var _this;\n\n    _classCallCheck(this, Data);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Data).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Data, [{\n    key: \"deleteBook\",\n    value: function deleteBook(e, id) {\n      e.preventDefault();\n      this.props.DeleteBook(id);\n    }\n  }, {\n    key: \"editBook\",\n    value: function editBook(e, id) {\n      e.preventDefault();\n      this.props.EditBook(id);\n    } // componentDidMount() {\n    //     bookAction.getRecord();\n    //  }\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      bookAction.getRecord();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"cehek\", this.props.books);\n\n      if (this.props.books.length > 0) {\n        return this.props.books.map(function (book) {\n          if (book.editing === true) {\n            // eslint-disable-next-line no-unused-expressions\n            return React.createElement(EditBook, {\n              book: book,\n              key: book.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            });\n          } else {\n            return React.createElement(\"tr\", {\n              key: book.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            }, _this2.props.books.length), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41\n              },\n              __self: this\n            }, book.booktitle), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            }, book.cover), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }, book.author), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44\n              },\n              __self: this\n            }, book.publisher), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            }, \"  \", React.createElement(\"button\", {\n              onClick: function onClick(e) {\n                return _this2.editBook(e, book.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            }, \"Edit\"), React.createElement(\"button\", {\n              onClick: function onClick(e) {\n                return _this2.deleteBook(e, book.id);\n              },\n              className: \"btn btn-danger\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            }, \"Delete\")));\n          }\n        });\n      } else return React.createElement(BlankState, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Data;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  console.log(\"map\", state);\n  return {\n    books: state.books.books\n  };\n};\n\nvar matchDispatchToProps = function matchDispatchToProps(dispatch) {\n  return {\n    DeleteBook: function DeleteBook(index) {\n      return dispatch(bookAction.DeleteBook(index));\n    },\n    EditBook: function EditBook(index) {\n      return dispatch(bookAction.EditBook(index));\n    } // getRecord: dispatch(bookAction.getRecord())\n    //  getRecord:index =>dispatch(bookAction.getRecord(index))\n\n  };\n};\n\nexport default connect(mapStateToProps, matchDispatchToProps)(Data);","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app-New\\src\\components\\AllBooks\\Data.jsx"],"names":["React","Component","connect","EditBook","BlankState","bookAction","Data","props","state","e","id","preventDefault","DeleteBook","getRecord","console","log","books","length","map","book","editing","booktitle","cover","author","publisher","editBook","deleteBook","mapStateToProps","ownProps","matchDispatchToProps","dispatch","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EditBook from '../EditBook/EditBookComponent';\r\nimport BlankState from './BlankState';\r\nimport * as bookAction from '../../actions/index'\r\nclass Data extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    \r\n    deleteBook(e, id) {\r\n        e.preventDefault();\r\n        this.props.DeleteBook(id);\r\n    }\r\n    editBook(e, id) {\r\n        e.preventDefault();       \r\n        this.props.EditBook(id);\r\n    }\r\n    // componentDidMount() {\r\n    //     bookAction.getRecord();\r\n    //  }\r\n    componentDidMount() {\r\n        (bookAction.getRecord());\r\n      }\r\n    render() {\r\n      \r\n        console.log(\"cehek\",this.props.books)\r\n        if (this.props.books.length > 0) {\r\n            \r\n            return (\r\n                this.props.books.map((book) => {\r\n                    if(book.editing===true){\r\n                        // eslint-disable-next-line no-unused-expressions\r\n                       return <EditBook book={book} key={book.id}/>\r\n                    } else {\r\n                    return (<tr\r\n                        key={book.id}\r\n                    >\r\n                        <td>{this.props.books.length}</td>\r\n                        <td>{book.booktitle}</td>\r\n                        <td>{book.cover}</td>\r\n                        <td>{book.author}</td>\r\n                        <td>{book.publisher}</td>\r\n                        <td>  <button onClick={(e) => this.editBook(e, book.id)}>Edit</button><button onClick={(e) => this.deleteBook(e, book.id)} className=\"btn btn-danger\">Delete</button></td>\r\n                    </tr>);}\r\n                })\r\n            )\r\n        }\r\n        else return <BlankState />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    \r\n    console.log(\"map\",state);\r\n    return {\r\n        books:state.books.books\r\n    }\r\n}\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return {\r\n        DeleteBook: index => dispatch(bookAction.DeleteBook(index)),\r\n        EditBook: index => dispatch(bookAction.EditBook(index)),\r\n       // getRecord: dispatch(bookAction.getRecord())\r\n      //  getRecord:index =>dispatch(bookAction.getRecord(index))\r\n        \r\n    }\r\n};\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Data);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}