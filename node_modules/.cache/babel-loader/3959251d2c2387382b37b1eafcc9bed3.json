{"ast":null,"code":"import _classCallCheck from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\src\\\\components\\\\AllBooks\\\\AllBookComponent.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DataState from './Data';\nimport LoadingState from './loading';\nimport ErrorState from './Error';\nimport BlankState from './BlankState';\nimport EditBookState from '../EditBook/loading';\nimport { fetchBookRecord, fetchBooks, DeleteBook, EditBook } from '../../actions/index';\n\nvar BooksRecord =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BooksRecord, _Component);\n\n  function BooksRecord(props) {\n    var _this;\n\n    _classCallCheck(this, BooksRecord);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BooksRecord).call(this, props));\n    _this.state = {\n      editing: false,\n      id: null\n    };\n    _this.EditBook = _this.EditBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.DeleteBook = _this.DeleteBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BooksRecord, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchBookRecord());\n    }\n  }, {\n    key: \"DeleteBook\",\n    value: function DeleteBook(e) {\n      console.log(\"delete\", e); // this.props.dispatch(DeleteBook(id));\n    }\n  }, {\n    key: \"EditBook\",\n    value: function EditBook(id) {\n      console.log(\"edit\", id);\n      this.setState({\n        editing: true,\n        id: id\n      }); //    this.props.dispatch(EditBook(id));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          books = _this$props.books,\n          isFetching = _this$props.isFetching;\n      console.log(\"Main Book Component error,isfetch,items\", isFetching, books);\n      var isediting = this.state.editing;\n      var id = this.state.id;\n      console.log(\"Editing:\", isediting); // if (isError) {\n      //     return <ErrorState/>;\n      // }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, isFetching && books.length === 0 && React.createElement(LoadingState, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), !isFetching && books.length === 0 && React.createElement(BlankState, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), books.length > 0 && React.createElement(\"table\", {\n        className: \"BookRecord\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Book Title\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Cover\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Author\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Publisher\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(DataState, {\n        getbooks: books,\n        onEditClick: function onEditClick(id) {\n          _this2.EditBook(id);\n        },\n        onDeleteClick: function onDeleteClick(id) {\n          _this2.DeleteBook(id);\n        },\n        isediting: isediting,\n        Id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BooksRecord;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    books: state.books.items,\n    isFetching: state.books.isfetch\n  };\n};\n\nBooksRecord.propTypes = {\n  books: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps)(BooksRecord);","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app-V1\\src\\components\\AllBooks\\AllBookComponent.jsx"],"names":["React","Component","connect","PropTypes","DataState","LoadingState","ErrorState","BlankState","EditBookState","fetchBookRecord","fetchBooks","DeleteBook","EditBook","BooksRecord","props","state","editing","id","bind","dispatch","e","console","log","setState","books","isFetching","isediting","length","mapStateToProps","items","isfetch","propTypes","array","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport DataState from './Data';\r\nimport LoadingState from './loading';\r\nimport ErrorState from './Error';\r\nimport BlankState from './BlankState';\r\nimport EditBookState from '../EditBook/loading';\r\nimport {fetchBookRecord, fetchBooks, DeleteBook, EditBook } from '../../actions/index';\r\nclass BooksRecord extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            editing:false,\r\n            id:null\r\n        }\r\n        this.EditBook = this.EditBook.bind(this)\r\n        this.DeleteBook = this.DeleteBook.bind(this)\r\n      }\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchBookRecord());\r\n    }\r\n    DeleteBook(e) {\r\n        console.log(\"delete\",e,)\r\n       // this.props.dispatch(DeleteBook(id));\r\n    }\r\n    EditBook(id) {        \r\n    console.log(\"edit\",id)\r\n    this.setState({\r\n        editing: true,\r\n        id:id\r\n    });\r\n    //    this.props.dispatch(EditBook(id));\r\n    }\r\n    render() {\r\n        const { books, isFetching } = this.props;\r\n        console.log(\"Main Book Component error,isfetch,items\",isFetching,books)\r\n        const isediting=this.state.editing;\r\n        const id=this.state.id;\r\n\r\n        console.log(\"Editing:\",isediting);\r\n\r\n        // if (isError) {\r\n        //     return <ErrorState/>;\r\n        // }\r\n        return (<div>\r\n            \r\n            {/* {isError && (<ErrorState />)} */}\r\n            {isFetching && books.length === 0 && <LoadingState />}\r\n            {!isFetching && books.length === 0 && <BlankState />}\r\n            { books.length > 0 && (\r\n                 <table className=\"BookRecord\">\r\n                 <thead>\r\n                     <tr>\r\n                         {/* <td>Sr No</td> */}\r\n                         <td>Book Title</td>\r\n                         <td>Cover</td>\r\n                         <td>Author</td>\r\n                         <td>Publisher</td>\r\n                         <td>Action</td>\r\n                     </tr>\r\n                 </thead>\r\n                 <DataState getbooks={books}\r\n                  onEditClick={(id)=>{this.EditBook(id)}} \r\n                  onDeleteClick={(id)=>{this.DeleteBook(id)}}\r\n                  isediting={isediting} \r\n                  Id={id}\r\n                     />\r\n             </table>\r\n               \r\n                )\r\n            }\r\n            {/* {isediting && <EditBookState/>} */}\r\n\r\n        </div>);\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    books: state.books.items,\r\n    isFetching: state.books.isfetch\r\n});\r\nBooksRecord.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    isFetching: PropTypes.bool.isRequired,\r\n}\r\nexport default connect(mapStateToProps)(BooksRecord);"]},"metadata":{},"sourceType":"module"}