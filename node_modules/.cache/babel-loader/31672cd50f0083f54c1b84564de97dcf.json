{"ast":null,"code":"import _classCallCheck from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\src\\\\components\\\\AllBooks\\\\AllBookComponent.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DataState from './Data';\nimport LoadingState from './loading';\nimport ErrorState from './Error';\nimport BlankState from './BlankState';\nimport { fetchBookRecord, fetchBooks, DeleteBook, EditBook } from '../../actions/index';\n\nvar BooksRecord =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BooksRecord, _Component);\n\n  function BooksRecord() {\n    _classCallCheck(this, BooksRecord);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BooksRecord).apply(this, arguments));\n  }\n\n  _createClass(BooksRecord, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchBookRecord());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          books = _this$props.books,\n          isFetching = _this$props.isFetching;\n      console.log(\"Main Book Component error,isfetch,items\", isFetching, books); // if (isError) {\n      //     return <ErrorState/>;\n      // }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, isFetching && books.length === 0 && React.createElement(LoadingState, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), !isFetching && books.length === 0 && React.createElement(BlankState, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), books.length > 0 && React.createElement(DataState, {\n        getbooks: books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksRecord;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    books: state.books.items,\n    isFetching: state.books.isfetch\n  };\n};\n\nBooksRecord.propTypes = {\n  books: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps)(BooksRecord);","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app-V1\\src\\components\\AllBooks\\AllBookComponent.jsx"],"names":["React","Component","connect","PropTypes","DataState","LoadingState","ErrorState","BlankState","fetchBookRecord","fetchBooks","DeleteBook","EditBook","BooksRecord","props","dispatch","books","isFetching","console","log","length","mapStateToProps","state","items","isfetch","propTypes","array","isRequired","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,UAAP,MAAuB,SAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,eAAR,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiDC,QAAjD,QAAiE,qBAAjE;;IACMC,W;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWC,QAAX,CAAoBN,eAAe,EAAnC;AACH;;;6BACQ;AAAA,wBACyB,KAAKK,KAD9B;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUC,UADV,eACUA,UADV;AAELC,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAsDF,UAAtD,EAAiED,KAAjE,EAFK,CAGL;AACA;AACA;;AACA,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEHC,UAAU,IAAID,KAAK,CAACI,MAAN,KAAiB,CAA/B,IAAoC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFjC,EAGH,CAACH,UAAD,IAAeD,KAAK,CAACI,MAAN,KAAiB,CAAhC,IAAqC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHlC,EAIHJ,KAAK,CAACI,MAAN,GAAe,CAAf,IACG,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAEJ,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,CAAR;AAWH;;;;EArBqBd,S;;AAuB1B,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BN,IAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYO,KADW;AAE9BN,IAAAA,UAAU,EAAEK,KAAK,CAACN,KAAN,CAAYQ;AAFM,GAAL;AAAA,CAA7B;;AAIAX,WAAW,CAACY,SAAZ,GAAwB;AACpBT,EAAAA,KAAK,EAAEZ,SAAS,CAACsB,KAAV,CAAgBC,UADH;AAEpBV,EAAAA,UAAU,EAAEb,SAAS,CAACwB,IAAV,CAAeD;AAFP,CAAxB;AAIA,eAAexB,OAAO,CAACkB,eAAD,CAAP,CAAyBR,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport DataState from './Data';\r\nimport LoadingState from './loading';\r\nimport ErrorState from './Error';\r\nimport BlankState from './BlankState';\r\nimport {fetchBookRecord, fetchBooks, DeleteBook, EditBook } from '../../actions/index';\r\nclass BooksRecord extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchBookRecord());\r\n    }\r\n    render() {\r\n        const { books, isFetching } = this.props;\r\n        console.log(\"Main Book Component error,isfetch,items\",isFetching,books)\r\n        // if (isError) {\r\n        //     return <ErrorState/>;\r\n        // }\r\n        return (<div>\r\n            {/* {isError && (<ErrorState />)} */}\r\n            {isFetching && books.length === 0 && <LoadingState />}\r\n            {!isFetching && books.length === 0 && <BlankState />}\r\n            {books.length > 0 && (\r\n                <DataState getbooks={books}\r\n                     />\r\n                )\r\n            }\r\n\r\n        </div>);\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    books: state.books.items,\r\n    isFetching: state.books.isfetch\r\n});\r\nBooksRecord.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    isFetching: PropTypes.bool.isRequired,\r\n}\r\nexport default connect(mapStateToProps)(BooksRecord);"]},"metadata":{},"sourceType":"module"}