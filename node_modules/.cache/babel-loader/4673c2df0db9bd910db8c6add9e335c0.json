{"ast":null,"code":"import BookRecord from \"../API/index\"; // export const fetchBooks=()=> {    \n//     let records = BookRecord();\n//     console.log(\"getrecord\",records)\n//     return{\n//             type : 'FETCH_BOOK_RECORD',\n//             payload : records\n//     }\n//   }\n\nexport var receivedPosts = function receivedPosts(records) {\n  return {\n    type: 'RECEIVE_POSTS',\n    payload: records\n  };\n};\nexport function fetchBooks() {\n  console.log(\"FetchBOOK\");\n  var records = BookRecord();\n  return function (dispatch) {\n    dispatch(receivedPosts(records));\n  };\n} // export const getRecord=()=>{\n//     let records = BookRecord();\n//     console.log(\"getrecord\",records)\n//     return (dispatch, getState) => {       \n//                 dispatch({\n//                     type : 'FETCH_BOOK_RECORD',\n//                     payload : records\n//                 });\n//             ;\n//     }\n// }\n\nexport var addBook = function addBook(book) {\n  console.log(\"res\", book);\n  return {\n    type: 'ADD_BOOK',\n    payload: book\n  };\n};\nexport var UpdateBook = function UpdateBook(book) {\n  return {\n    type: 'UPDATE_BOOK',\n    payload: book\n  };\n};\nexport var DeleteBook = function DeleteBook(id) {\n  return {\n    type: 'DELETE_BOOK',\n    id: id\n  };\n};\nexport var EditBook = function EditBook(id) {\n  return {\n    type: 'EDIT_BOOK',\n    id: id\n  };\n};\nexport var SearchBook = function SearchBook(booktitle) {\n  return {\n    type: 'SEARCH_BOOK',\n    payload: booktitle\n  };\n};\nexport var selectBook = function selectBook(book) {\n  return {\n    type: 'BOOK_SELECTED',\n    payload: book\n  };\n};\nexport var checkExistingBook = function checkExistingBook(book) {\n  return {\n    type: 'BOOKTITLE_EXIST',\n    payload: book.bookTitle\n  };\n};","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app-New\\src\\actions\\index.js"],"names":["BookRecord","receivedPosts","records","type","payload","fetchBooks","console","log","dispatch","addBook","book","UpdateBook","DeleteBook","id","EditBook","SearchBook","booktitle","selectBook","checkExistingBook","bookTitle"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACI,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD;AAAA,SAAc;AAC3CC,IAAAA,IAAI,EAAE,eADqC;AAE3CC,IAAAA,OAAO,EAAEF;AAFkC,GAAd;AAAA,CAAtB;AAIT,OAAO,SAASG,UAAT,GAAsB;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,MAAIL,OAAO,GAAGF,UAAU,EAAxB;AACA,SAAO,UAAUQ,QAAV,EAAoB;AACzBA,IAAAA,QAAQ,CAACP,aAAa,CAACC,OAAD,CAAd,CAAR;AACD,GAFD;AAGA,C,CACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,OAAO,IAAMO,OAAO,GAAC,SAARA,OAAQ,CAACC,IAAD,EAAQ;AACzBJ,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBG,IAAnB;AACA,SAAO;AACHP,IAAAA,IAAI,EAAE,UADH;AAEHC,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CANM;AAOP,OAAO,IAAMC,UAAU,GAAC,SAAXA,UAAW,CAACD,IAAD,EAAQ;AAC5B,SAAO;AACHP,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,IAAME,UAAU,GAAE,SAAZA,UAAY,CAACC,EAAD,EAAQ;AAC7B,SAAO;AACHV,IAAAA,IAAI,EAAE,aADH;AAEHU,IAAAA,EAAE,EAAEA;AAFD,GAAP;AAIH,CALM;AAMP,OAAO,IAAMC,QAAQ,GAAE,SAAVA,QAAU,CAACD,EAAD,EAAQ;AAC3B,SAAO;AACHV,IAAAA,IAAI,EAAE,WADH;AAEHU,IAAAA,EAAE,EAAEA;AAFD,GAAP;AAIH,CALM;AAMP,OAAO,IAAME,UAAU,GAAE,SAAZA,UAAY,CAACC,SAAD,EAAe;AACpC,SAAO;AACHb,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,OAAO,EAAEY;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACP,IAAD,EAAU;AAChC,SAAO;AACHP,IAAAA,IAAI,EAAE,eADH;AAEHC,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,IAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,IAAD,EAAU;AACvC,SAAO;AACHP,IAAAA,IAAI,EAAE,iBADH;AAEHC,IAAAA,OAAO,EAAEM,IAAI,CAACS;AAFX,GAAP;AAIH,CALM","sourcesContent":["import BookRecord from \"../API/index\";\r\n// export const fetchBooks=()=> {    \r\n//     let records = BookRecord();\r\n//     console.log(\"getrecord\",records)\r\n//     return{\r\n//             type : 'FETCH_BOOK_RECORD',\r\n//             payload : records\r\n//     }\r\n    \r\n//   }\r\n    export const receivedPosts = (records) => ({\r\n    type: 'RECEIVE_POSTS',\r\n    payload: records,\r\n    });\r\n  export function fetchBooks() {\r\n    console.log(\"FetchBOOK\")\r\n    let records = BookRecord();\r\n    return function (dispatch) {\r\n      dispatch(receivedPosts(records));      \r\n    };\r\n   }\r\n// export const getRecord=()=>{\r\n//     let records = BookRecord();\r\n//     console.log(\"getrecord\",records)\r\n//     return (dispatch, getState) => {       \r\n//                 dispatch({\r\n//                     type : 'FETCH_BOOK_RECORD',\r\n//                     payload : records\r\n//                 });\r\n            \r\n//             ;\r\n//     }\r\n// }\r\nexport const addBook=(book)=>{\r\n    console.log(\"res\", book)\r\n    return {\r\n        type: 'ADD_BOOK',\r\n        payload: book\r\n    }\r\n}\r\nexport const UpdateBook=(book)=>{\r\n    return {\r\n        type: 'UPDATE_BOOK',\r\n        payload: book\r\n    }\r\n}\r\nexport const DeleteBook= (id) => {\r\n    return {\r\n        type: 'DELETE_BOOK',\r\n        id: id\r\n    }   \r\n}\r\nexport const EditBook= (id) => {\r\n    return {\r\n        type: 'EDIT_BOOK',\r\n        id: id\r\n    }   \r\n}\r\nexport const SearchBook= (booktitle) => {\r\n    return {\r\n        type: 'SEARCH_BOOK',\r\n        payload: booktitle\r\n    }   \r\n}\r\nexport const selectBook = (book) => {\r\n    return {\r\n        type: 'BOOK_SELECTED',\r\n        payload: book\r\n    }\r\n};\r\nexport const checkExistingBook = (book) => {\r\n    return {\r\n        type: 'BOOKTITLE_EXIST',\r\n        payload: book.bookTitle\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}