{"ast":null,"code":"import _objectSpread from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n// const initialState=[{id: 1, bookTitle: 'The great wall', cover:'asdcx', author: 'qazwsxl'},\n//         {id: 2, bookTitle: 'oop', cover:'asdcx', author: 'qazwsxl'},\n//         {id: 3, bookTitle: 'datastructure', cover:'asdcx', author: 'qazwsxl'},\n//         {id: 4, bookTitle: 'operating system', cover:'asdcx', author: 'qazwsxall'},\n//         {id: 5, bookTitle: 'the explorers club', cover:'asdcx', author: 'qazwsxuch'},\n//         {id: 6, bookTitle: 'maths',cover:'asdcx', author: 'qazwsx5'},\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'BOOK_SELECTED':\n      console.log(\"reducer\", state);\n      return action.payload;\n\n    case 'ADD_BOOK':\n      console.log(\"reducer\", state, action.payload); //  return state.concat([action.payload])\n\n      return [].concat(_toConsumableArray(state), [Object.assign({}, action.payload)]);\n\n    case 'DELETE_BOOK':\n      console.log(\"delete bookid\", action.id, \"state\", state);\n      var deleteresult = state.filter(function (book) {\n        return book.id !== action.id;\n      });\n      console.log(deleteresult);\n      return deleteresult;\n\n    case 'UPDATE_BOOK':\n      console.log(\"update bookid\", action.payload, \"state\", state);\n      return state.map(function (book) {\n        if (book.id === action.id) {\n          return _objectSpread({}, book, {\n            bookTitle: action.payload.bookTitle,\n            cover: action.payload.cover,\n            author: action.payload.author,\n            publisher: action.payload.publisher,\n            date: action.payload.date,\n            editing: !book.editing\n          });\n        } else return book;\n      });\n\n    case 'EDIT_BOOK':\n      return state.map(function (book) {\n        return book.id === action.id ? _objectSpread({}, book, {\n          editing: !book.editing\n        }) : book;\n      });\n\n    default:\n      return state;\n  }\n}\n; //     switch (action.type) {\n//         case 'ADD_BOOK':\n//             return action.payload;\n//             break;\n//     }\n//     return state;\n// };","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app\\src\\reducers\\bookdetailReducer.js"],"names":["state","action","type","console","log","payload","Object","assign","id","deleteresult","filter","book","map","bookTitle","cover","author","publisher","date","editing"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,YAA8B;AAAA,MAApBA,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB;AACA,aAAOC,MAAM,CAACI,OAAd;;AAEF,SAAK,UAAL;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB,EAA6BC,MAAM,CAACI,OAApC,EADA,CAEA;;AACA,0CACKL,KADL,IAEEM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAM,CAACI,OAAzB,CAFF;;AAIA,SAAK,aAAL;AACEF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,MAAM,CAACO,EAApC,EAAwC,OAAxC,EAAiDR,KAAjD;AACA,UAAIS,YAAY,GAAGT,KAAK,CAACU,MAAN,CAAa,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACH,EAAL,KAAYP,MAAM,CAACO,EAA7B;AAAA,OAAb,CAAnB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACA,aAAOA,YAAP;;AACA,SAAK,aAAL;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,MAAM,CAACI,OAApC,EAA6C,OAA7C,EAAsDL,KAAtD;AACA,aAAOA,KAAK,CAACY,GAAN,CAAU,UAACD,IAAD,EAAU;AACzB,YAAIA,IAAI,CAACH,EAAL,KAAYP,MAAM,CAACO,EAAvB,EAA2B;AAC3B,mCACGG,IADH;AAEAE,YAAAA,SAAS,EAAEZ,MAAM,CAACI,OAAP,CAAeQ,SAF1B;AAGAC,YAAAA,KAAK,EAAEb,MAAM,CAACI,OAAP,CAAeS,KAHtB;AAIAC,YAAAA,MAAM,EAACd,MAAM,CAACI,OAAP,CAAeU,MAJtB;AAKAC,YAAAA,SAAS,EAACf,MAAM,CAACI,OAAP,CAAeW,SALzB;AAMAC,YAAAA,IAAI,EAAChB,MAAM,CAACI,OAAP,CAAeY,IANpB;AAOAC,YAAAA,OAAO,EAAE,CAACP,IAAI,CAACO;AAPf;AASC,SAVD,MAUO,OAAOP,IAAP;AACN,OAZI,CAAP;;AAaA,SAAK,WAAL;AACE,aAAOX,KAAK,CAACY,GAAN,CAAU,UAACD,IAAD;AAAA,eAAUA,IAAI,CAACH,EAAL,KAAYP,MAAM,CAACO,EAAnB,qBAA6BG,IAA7B;AAAmCO,UAAAA,OAAO,EAAE,CAACP,IAAI,CAACO;AAAlD,aAA8DP,IAAxE;AAAA,OAAV,CAAP;;AACJ;AACE,aAAOX,KAAP;AAnCJ;AAqCD;AAAA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// const initialState=[{id: 1, bookTitle: 'The great wall', cover:'asdcx', author: 'qazwsxl'},\r\n//         {id: 2, bookTitle: 'oop', cover:'asdcx', author: 'qazwsxl'},\r\n//         {id: 3, bookTitle: 'datastructure', cover:'asdcx', author: 'qazwsxl'},\r\n//         {id: 4, bookTitle: 'operating system', cover:'asdcx', author: 'qazwsxall'},\r\n//         {id: 5, bookTitle: 'the explorers club', cover:'asdcx', author: 'qazwsxuch'},\r\n//         {id: 6, bookTitle: 'maths',cover:'asdcx', author: 'qazwsx5'},\r\n//         {id: 7, bookTitle: 'english',cover:'asdcx', author: 'qazwsx'}]\r\nexport default function (state = [], action) {\r\n  switch (action.type) {\r\n    case 'BOOK_SELECTED':\r\n      console.log(\"reducer\", state);\r\n      return action.payload;\r\n\r\n    case 'ADD_BOOK':    \r\n    console.log(\"reducer\", state,action.payload);\r\n    //  return state.concat([action.payload])\r\n    return [\r\n      ...state,\r\n      Object.assign({}, action.payload)\r\n    ];\r\n    case 'DELETE_BOOK':\r\n      console.log(\"delete bookid\", action.id, \"state\", state);\r\n      let deleteresult = state.filter((book) => book.id !== action.id);\r\n      console.log(deleteresult);\r\n      return deleteresult;\r\n      case 'UPDATE_BOOK':\r\n      console.log(\"update bookid\", action.payload, \"state\", state);\r\n      return state.map((book) => {\r\n        if (book.id === action.id) {\r\n        return {\r\n        ...book,\r\n        bookTitle: action.payload.bookTitle,\r\n        cover: action.payload.cover,\r\n        author:action.payload.author,\r\n        publisher:action.payload.publisher,\r\n        date:action.payload.date,\r\n        editing: !book.editing\r\n        }\r\n        } else return book;\r\n        })\r\n      case 'EDIT_BOOK':\r\n        return state.map((book) => book.id === action.id ? { ...book, editing: !book.editing } : book)\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//     switch (action.type) {\r\n//         case 'ADD_BOOK':\r\n//             return action.payload;\r\n//             break;\r\n//     }\r\n//     return state;\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}