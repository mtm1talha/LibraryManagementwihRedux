{"ast":null,"code":"import _classCallCheck from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Work\\\\react-redux\\\\book-management-app\\\\src\\\\components\\\\EditBook.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as bookAction from '../actions/index';\n\nvar EditBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditBook, _Component);\n\n  function EditBook(props) {\n    var _this;\n\n    _classCallCheck(this, EditBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditBook).call(this, props));\n    _this.state = {\n      id: _this.props.book.id,\n      booktitle: _this.props.book.booktitle,\n      cover: _this.props.book.cover,\n      authorname: _this.props.book.author,\n      publishername: _this.props.book.publisher,\n      date: _this.props.book.date\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditBook, [{\n    key: \"handleChangeBookTitle\",\n    value: function handleChangeBookTitle(e) {\n      this.setState({\n        booktitle: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeCover\",\n    value: function handleChangeCover(e) {\n      this.setState({\n        cover: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeAuthor\",\n    value: function handleChangeAuthor(e) {\n      this.setState({\n        authorname: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangePublisher\",\n    value: function handleChangePublisher(e) {\n      this.setState({\n        publishername: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeDate\",\n    value: function handleChangeDate(e) {\n      this.setState({\n        date: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var book = {\n        id: this.props.book.id,\n        booktitle: this.state.booktitle,\n        cover: this.state.cover,\n        author: this.state.authorname,\n        publisher: this.state.publishername,\n        date: this.state.date //console.log(book);\n        // this.setState({\n        //   booktitle:'',\n        //   cover:'',\n        //   authorname:'',\n        //   publishername:'',\n        //   date:''\n        // });\n\n      };\n      this.props.UpdateBook(book);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"tr\", {\n        key: this.state.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangeBookTitle.bind(this),\n        id: \"bookname\",\n        value: this.state.booktitle,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangeCover.bind(this),\n        id: \"covername\",\n        value: this.state.cover,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangeAuthor.bind(this),\n        id: \"authorname\",\n        value: this.state.authorname,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangePublisher.bind(this),\n        id: \"publishername\",\n        value: this.state.publishername,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"  \", React.createElement(\"button\", {\n        onClick: function onClick(e, val) {\n          return _this2.handleSubmit(e, val);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Update\"))) //      <div className=\"modal fade\" id=\"myModal\" role=\"dialog\">\n      //     <div className=\"modal-dialog\">\n      //       <div className=\"modal-content\">\n      //         <div className=\"modal-header\">\n      //           <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\n      //           <h4 className=\"modal-title\">Edit Record</h4>\n      //         </div>\n      //         <div className=\"modal-body\">\n      //         <form  onSubmit={(val) => this.handleSubmit(val)}>\n      //           <input type=\"text\" hidden id=\"bookid\" value={this.props.book.id}/>\n      //           <label>Book Name</label>\n      //           <input type=\"text\" onChange={this.handleChangeBookTitle.bind(this)} id=\"bookname\" value={this.state.booktitle} required/>                \n      //           <label>Cover</label>\n      //           <input type=\"text\"onChange={this.handleChangeCover.bind(this)} id=\"covername\" value={this.state.cover} required/>\n      //           <label>Author</label>\n      //           <input type=\"text\" onChange={this.handleChangeAuthor.bind(this)} id=\"authorname\" value={this.state.authorname} required/>\n      //           <label>Publisher</label>\n      //           <input type=\"text\" onChange={this.handleChangePublisher.bind(this)} id=\"publishername\" value={this.state.publishername} required/>\n      //           <label>Date</label>\n      //           <input type=\"date\" onChange={this.handleChangeDate.bind(this)} id=\"date\" value={this.state.date} required/>\n      //           <button className='submit'>Update!</button>\n      //   </form>\n      //           {/* <button type=\"button\" className=\"btn btn-default\" id=\"savebutton\" onClick={() => this.props.addBook(book)}>Save</button> */}\n      //         </div>\n      //       </div>\n      //     </div>\n      //   </div> \n      ;\n    }\n  }]);\n\n  return EditBook;\n}(Component);\n\nvar matchDispatchToProps = function matchDispatchToProps(dispatch) {\n  return {\n    UpdateBook: function UpdateBook(index) {\n      return dispatch(bookAction.UpdateBook(index));\n    }\n  };\n};\n\nexport default connect(null, matchDispatchToProps)(EditBook);","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app\\src\\components\\EditBook.jsx"],"names":["React","Component","connect","bookAction","EditBook","props","state","id","book","booktitle","cover","authorname","author","publishername","publisher","date","handleSubmit","bind","e","setState","target","value","event","preventDefault","UpdateBook","handleChangeBookTitle","handleChangeCover","handleChangeAuthor","handleChangePublisher","val","matchDispatchToProps","dispatch","index"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as bookAction from '../actions/index';\r\nclass EditBook extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.book.id,\r\n            booktitle: this.props.book.booktitle,\r\n            cover: this.props.book.cover,\r\n            authorname: this.props.book.author,\r\n            publishername: this.props.book.publisher,\r\n            date: this.props.book.date\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChangeBookTitle(e) {\r\n        this.setState({\r\n            booktitle: e.target.value\r\n        })\r\n    }\r\n    handleChangeCover(e) {\r\n        this.setState({\r\n            cover: e.target.value,\r\n        })\r\n    }\r\n    handleChangeAuthor(e) {\r\n        this.setState({\r\n            authorname: e.target.value,\r\n        })\r\n    }\r\n    handleChangePublisher(e) {\r\n        this.setState({\r\n            publishername: e.target.value,\r\n        })\r\n    }\r\n    handleChangeDate(e) {\r\n        this.setState({\r\n            date: e.target.value\r\n        })\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let book = {\r\n            id: this.props.book.id,\r\n            booktitle: this.state.booktitle,\r\n            cover: this.state.cover,\r\n            author: this.state.authorname,\r\n            publisher: this.state.publishername,\r\n            date: this.state.date\r\n        }\r\n        //console.log(book);\r\n        // this.setState({\r\n        //   booktitle:'',\r\n        //   cover:'',\r\n        //   authorname:'',\r\n        //   publishername:'',\r\n        //   date:''\r\n        // });\r\n        this.props.UpdateBook(book);\r\n    }\r\n    render() {\r\n        return (\r\n            <tr\r\n                key={this.state.id}>\r\n                <td></td>\r\n                <td>\r\n                    <input type=\"text\" onChange={this.handleChangeBookTitle.bind(this)} id=\"bookname\" value={this.state.booktitle} required />\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" onChange={this.handleChangeCover.bind(this)} id=\"covername\" value={this.state.cover} required />\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" onChange={this.handleChangeAuthor.bind(this)} id=\"authorname\" value={this.state.authorname} required />\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" onChange={this.handleChangePublisher.bind(this)} id=\"publishername\" value={this.state.publishername} required />\r\n                </td>\r\n                <td>  <button onClick={(e, val) => this.handleSubmit(e, val)}>Update</button></td>\r\n            </tr>\r\n            //      <div className=\"modal fade\" id=\"myModal\" role=\"dialog\">\r\n            //     <div className=\"modal-dialog\">\r\n            //       <div className=\"modal-content\">\r\n            //         <div className=\"modal-header\">\r\n            //           <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n            //           <h4 className=\"modal-title\">Edit Record</h4>\r\n            //         </div>\r\n            //         <div className=\"modal-body\">\r\n            //         <form  onSubmit={(val) => this.handleSubmit(val)}>\r\n            //           <input type=\"text\" hidden id=\"bookid\" value={this.props.book.id}/>\r\n            //           <label>Book Name</label>\r\n            //           <input type=\"text\" onChange={this.handleChangeBookTitle.bind(this)} id=\"bookname\" value={this.state.booktitle} required/>                \r\n            //           <label>Cover</label>\r\n            //           <input type=\"text\"onChange={this.handleChangeCover.bind(this)} id=\"covername\" value={this.state.cover} required/>\r\n            //           <label>Author</label>\r\n            //           <input type=\"text\" onChange={this.handleChangeAuthor.bind(this)} id=\"authorname\" value={this.state.authorname} required/>\r\n            //           <label>Publisher</label>\r\n            //           <input type=\"text\" onChange={this.handleChangePublisher.bind(this)} id=\"publishername\" value={this.state.publishername} required/>\r\n            //           <label>Date</label>\r\n            //           <input type=\"date\" onChange={this.handleChangeDate.bind(this)} id=\"date\" value={this.state.date} required/>\r\n\r\n            //           <button className='submit'>Update!</button>\r\n            //   </form>\r\n            //           {/* <button type=\"button\" className=\"btn btn-default\" id=\"savebutton\" onClick={() => this.props.addBook(book)}>Save</button> */}\r\n            //         </div>\r\n            //       </div>\r\n            //     </div>\r\n            //   </div> \r\n        );\r\n    }\r\n}\r\n\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return {\r\n        UpdateBook: index => dispatch(bookAction.UpdateBook(index)),\r\n    }\r\n};\r\nexport default connect(null, matchDispatchToProps)(EditBook);"]},"metadata":{},"sourceType":"module"}