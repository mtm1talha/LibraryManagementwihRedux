{"ast":null,"code":"import _classCallCheck from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\src\\\\components\\\\AddBook\\\\Data.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as bookAction from '../../actions/index';\nimport ErrorState from './Error';\n\nvar Data =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Data, _Component);\n\n  function Data(props) {\n    var _this;\n\n    _classCallCheck(this, Data);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Data).call(this, props));\n    _this.state = {\n      booktitle: '',\n      cover: '',\n      authorname: '',\n      publishername: '',\n      date: ''\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Data, [{\n    key: \"handleChangeBookTitle\",\n    value: function handleChangeBookTitle(e) {\n      this.setState({\n        booktitle: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeCover\",\n    value: function handleChangeCover(e) {\n      this.setState({\n        cover: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeAuthor\",\n    value: function handleChangeAuthor(e) {\n      this.setState({\n        authorname: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangePublisher\",\n    value: function handleChangePublisher(e) {\n      this.setState({\n        publishername: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeDate\",\n    value: function handleChangeDate(e) {\n      this.setState({\n        date: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var book = {\n        id: new Date(),\n        booktitle: this.state.booktitle,\n        cover: this.state.cover,\n        author: this.state.authorname,\n        publisher: this.state.publishername,\n        date: this.state.date,\n        editing: false\n      };\n      console.log(\"book\", this.props.books); // var res= this.props.books.some(function (obj) { return obj['booktitle'] === book.booktitle })\n      //  console.log(\"book\",this.props.books,\"onclick click \",res);\n      //  if(res===false){\n\n      this.props.addBook(book);\n      this.setState({\n        booktitle: '',\n        cover: '',\n        authorname: '',\n        publishername: '',\n        date: ''\n      }); //  }\n      //   else{\n      //       return <ErrorState/>\n      //   }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"\\xD7\"), React.createElement(\"h4\", {\n        className: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Add new Record\")), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(val) {\n          return _this2.handleSubmit(val);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        hidden: true,\n        id: \"bookid\",\n        value: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Book Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangeBookTitle.bind(this),\n        id: \"bookname\",\n        value: this.state.booktitle,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Cover\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangeCover.bind(this),\n        id: \"covername\",\n        value: this.state.cover,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Author\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangeAuthor.bind(this),\n        id: \"authorname\",\n        value: this.state.authorname,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Publisher\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChangePublisher.bind(this),\n        id: \"publishername\",\n        value: this.state.publishername,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        type: \"date\",\n        onChange: this.handleChangeDate.bind(this),\n        id: \"date\",\n        value: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Add!\"))));\n    }\n  }]);\n\n  return Data;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    books: state.books\n  };\n};\n\nvar matchDispatchToProps = function matchDispatchToProps(dispatch) {\n  return {\n    addBook: function addBook(book) {\n      return dispatch(bookAction.addBook(book));\n    },\n    checkExistingBook: function checkExistingBook(book) {\n      return dispatch(bookAction.checkExistingBook(book));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, matchDispatchToProps)(Data);","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app-New\\src\\components\\AddBook\\Data.jsx"],"names":["React","Component","connect","bookAction","ErrorState","Data","props","state","booktitle","cover","authorname","publishername","date","handleSubmit","bind","e","setState","target","value","event","preventDefault","book","id","Date","author","publisher","editing","console","log","books","addBook","val","handleChangeBookTitle","handleChangeCover","handleChangeAuthor","handleChangePublisher","handleChangeDate","mapStateToProps","ownProps","matchDispatchToProps","dispatch","checkExistingBook"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,qBAA5B;AACA,OAAOC,UAAP,MAAuB,SAAvB;;IACMC,I;;;;;AACF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAC,EADC;AAEXC,MAAAA,KAAK,EAAC,EAFK;AAGXC,MAAAA,UAAU,EAAC,EAHA;AAIXC,MAAAA,aAAa,EAAC,EAJH;AAKXC,MAAAA,IAAI,EAAC;AALM,KAAb;AAOJ,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AATmB;AAUlB;;;;0CACqBC,C,EAAE;AACtB,WAAKC,QAAL,CAAc;AACZR,QAAAA,SAAS,EAACO,CAAC,CAACE,MAAF,CAASC;AADP,OAAd;AAGD;;;sCACiBH,C,EAAE;AAClB,WAAKC,QAAL,CAAc;AACZP,QAAAA,KAAK,EAACM,CAAC,CAACE,MAAF,CAASC;AADH,OAAd;AAGD;;;uCACkBH,C,EAAE;AACnB,WAAKC,QAAL,CAAc;AACZN,QAAAA,UAAU,EAACK,CAAC,CAACE,MAAF,CAASC;AADR,OAAd;AAGD;;;0CACqBH,C,EAAE;AACtB,WAAKC,QAAL,CAAc;AACZL,QAAAA,aAAa,EAACI,CAAC,CAACE,MAAF,CAASC;AADX,OAAd;AAGD;;;qCACgBH,C,EAAE;AACjB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAACG,CAAC,CAACE,MAAF,CAASC;AADF,OAAd;AAGD;;;iCACYC,K,EAAO;AAChBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,IAAI,GAAC;AACPC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,EADG;AAEPf,QAAAA,SAAS,EAAC,KAAKD,KAAL,CAAWC,SAFd;AAGPC,QAAAA,KAAK,EAAC,KAAKF,KAAL,CAAWE,KAHV;AAIPe,QAAAA,MAAM,EAAC,KAAKjB,KAAL,CAAWG,UAJX;AAKPe,QAAAA,SAAS,EAAC,KAAKlB,KAAL,CAAWI,aALd;AAMPC,QAAAA,IAAI,EAAC,KAAKL,KAAL,CAAWK,IANT;AAOPc,QAAAA,OAAO,EAAE;AAPF,OAAT;AASAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB,KAAKtB,KAAL,CAAWuB,KAA9B,EAXgB,CAYlB;AACD;AACA;;AACG,WAAKvB,KAAL,CAAWwB,OAAX,CAAmBT,IAAnB;AACA,WAAKL,QAAL,CAAc;AACVR,QAAAA,SAAS,EAAC,EADA;AAEVC,QAAAA,KAAK,EAAC,EAFI;AAGVC,QAAAA,UAAU,EAAC,EAHD;AAIVC,QAAAA,aAAa,EAAC,EAJJ;AAKVC,QAAAA,IAAI,EAAC;AALK,OAAd,EAhBgB,CAuBlB;AACA;AACA;AACA;AACE;;;6BAEK;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,OAAhC;AAAwC,wBAAa,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAO,QAAA,QAAQ,EAAE,kBAACmB,GAAD;AAAA,iBAAS,MAAI,CAAClB,YAAL,CAAkBkB,GAAlB,CAAT;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,MAAM,MAAzB;AAA0B,QAAA,EAAE,EAAC,QAA7B;AAAsC,QAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWgB,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKU,qBAAL,CAA2BlB,IAA3B,CAAgC,IAAhC,CAA7B;AAAoE,QAAA,EAAE,EAAC,UAAvE;AAAkF,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,SAApG;AAA+G,QAAA,QAAQ,MAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAKE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAkB,QAAA,QAAQ,EAAE,KAAKyB,iBAAL,CAAuBnB,IAAvB,CAA4B,IAA5B,CAA5B;AAA+D,QAAA,EAAE,EAAC,WAAlE;AAA8E,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,KAAhG;AAAuG,QAAA,QAAQ,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAOE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKyB,kBAAL,CAAwBpB,IAAxB,CAA6B,IAA7B,CAA7B;AAAiE,QAAA,EAAE,EAAC,YAApE;AAAiF,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWG,UAAnG;AAA+G,QAAA,QAAQ,MAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,EASE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKyB,qBAAL,CAA2BrB,IAA3B,CAAgC,IAAhC,CAA7B;AAAoE,QAAA,EAAE,EAAC,eAAvE;AAAuF,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWI,aAAzG;AAAwH,QAAA,QAAQ,MAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,EAWE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKyB,gBAAL,CAAsBtB,IAAtB,CAA2B,IAA3B,CAA7B;AAA+D,QAAA,EAAE,EAAC,MAAlE;AAAyE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWK,IAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAaE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,CADA,CALF,CADJ;AAwBH;;;;EA3FcX,S;;AA6FnB,IAAMoC,eAAe,GAAG,SAAlBA,eAAkB,CAAC9B,KAAD,EAAQ+B,QAAR,EAAqB;AACzC,SAAO;AACHT,IAAAA,KAAK,EAAEtB,KAAK,CAACsB;AADV,GAAP;AAGH,CAJD;;AAKA,IAAMU,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLV,IAAAA,OAAO,EAAE,iBAAAT,IAAI;AAAA,aAAGmB,QAAQ,CAACrC,UAAU,CAAC2B,OAAX,CAAmBT,IAAnB,CAAD,CAAX;AAAA,KADR;AAELoB,IAAAA,iBAAiB,EAAE,2BAAApB,IAAI;AAAA,aAAGmB,QAAQ,CAACrC,UAAU,CAACsC,iBAAX,CAA6BpB,IAA7B,CAAD,CAAX;AAAA;AAFlB,GAAP;AAID,CALH;;AAMA,eAAenB,OAAO,CAACmC,eAAD,EAAiBE,oBAAjB,CAAP,CAA8ClC,IAA9C,CAAf","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as bookAction from '../../actions/index';\r\nimport ErrorState from './Error';\r\nclass Data extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          booktitle:'',\r\n          cover:'',\r\n          authorname:'',\r\n          publishername:'',\r\n          date:''\r\n         }         \r\n    this.handleSubmit = this.handleSubmit.bind(this);   \r\n    }\r\n    handleChangeBookTitle(e){\r\n      this.setState({\r\n        booktitle:e.target.value\r\n      })\r\n    }\r\n    handleChangeCover(e){\r\n      this.setState({\r\n        cover:e.target.value,\r\n      })\r\n    }\r\n    handleChangeAuthor(e){\r\n      this.setState({\r\n        authorname:e.target.value,\r\n      })\r\n    }\r\n    handleChangePublisher(e){\r\n      this.setState({\r\n        publishername:e.target.value,\r\n      })\r\n    }\r\n    handleChangeDate(e){\r\n      this.setState({\r\n        date:e.target.value\r\n      })\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        let book={\r\n          id: new Date(),\r\n          booktitle:this.state.booktitle,\r\n          cover:this.state.cover,\r\n          author:this.state.authorname,\r\n          publisher:this.state.publishername,\r\n          date:this.state.date,\r\n          editing: false\r\n        }\r\n        console.log(\"book\",this.props.books)\r\n      // var res= this.props.books.some(function (obj) { return obj['booktitle'] === book.booktitle })\r\n     //  console.log(\"book\",this.props.books,\"onclick click \",res);\r\n     //  if(res===false){\r\n        this.props.addBook(book);       \r\n        this.setState({\r\n            booktitle:'',\r\n            cover:'',\r\n            authorname:'',\r\n            publishername:'',\r\n            date:''\r\n          });\r\n      //  }\r\n      //   else{\r\n      //       return <ErrorState/>\r\n      //   }\r\n       }\r\n      \r\n    render() { \r\n        return (   \r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 className=\"modal-title\">Add new Record</h4>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n              <form  onSubmit={(val) => this.handleSubmit(val)}>\r\n                <input type=\"text\" hidden id=\"bookid\" value={this.props.id}/>\r\n                <label>Book Name</label>\r\n                <input type=\"text\" onChange={this.handleChangeBookTitle.bind(this)} id=\"bookname\" value={this.state.booktitle} required/>                \r\n                <label>Cover</label>\r\n                <input type=\"text\"onChange={this.handleChangeCover.bind(this)} id=\"covername\" value={this.state.cover} required/>\r\n                <label>Author</label>\r\n                <input type=\"text\" onChange={this.handleChangeAuthor.bind(this)} id=\"authorname\" value={this.state.authorname} required/>\r\n                <label>Publisher</label>\r\n                <input type=\"text\" onChange={this.handleChangePublisher.bind(this)} id=\"publishername\" value={this.state.publishername} required/>\r\n                <label>Date</label>\r\n                <input type=\"date\" onChange={this.handleChangeDate.bind(this)} id=\"date\" value={this.state.date} />\r\n                \r\n                <button className='submit'>Add!</button>\r\n        </form>\r\n                </div>\r\n            </div> );\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        books: state.books\r\n    }\r\n}\r\nconst matchDispatchToProps = (dispatch) => {\r\n    return {        \r\n      addBook: book =>dispatch(bookAction.addBook(book)),\r\n      checkExistingBook: book =>dispatch(bookAction.checkExistingBook(book)) \r\n    }\r\n  };\r\nexport default connect(mapStateToProps,matchDispatchToProps)(Data);"]},"metadata":{},"sourceType":"module"}