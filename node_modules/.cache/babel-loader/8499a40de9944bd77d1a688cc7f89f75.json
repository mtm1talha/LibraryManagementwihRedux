{"ast":null,"code":"import _classCallCheck from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Work\\\\react-redux\\\\book-management-app-V1\\\\src\\\\components\\\\AllBooks\\\\AllBookComponent.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DataState from './Data';\nimport LoadingState from './loading';\nimport ErrorState from './Error';\nimport BlankState from './BlankState';\nimport { fetchBookRecord, fetchBooks, DeleteBook, EditBook } from '../../actions/index';\n\nvar BooksRecord =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BooksRecord, _Component);\n\n  function BooksRecord(props) {\n    var _this;\n\n    _classCallCheck(this, BooksRecord);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BooksRecord).call(this, props));\n    _this.EditBook = _this.EditBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.DeleteBook = _this.DeleteBook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BooksRecord, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchBookRecord());\n    }\n  }, {\n    key: \"DeleteBook\",\n    value: function DeleteBook(e) {\n      e.preventDefault();\n      console.log(\"delete\", e); // this.props.dispatch(DeleteBook(id));\n    }\n  }, {\n    key: \"EditBook\",\n    value: function EditBook(e) {\n      //  e.preventDefault();   \n      console.log(\"edit\"); //    this.props.dispatch(EditBook(id));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          books = _this$props.books,\n          isFetching = _this$props.isFetching;\n      console.log(\"Main Book Component error,isfetch,items\", isFetching, books); // if (isError) {\n      //     return <ErrorState/>;\n      // }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, isFetching && books.length === 0 && React.createElement(LoadingState, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), !isFetching && books.length === 0 && React.createElement(BlankState, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), books.length > 0 && React.createElement(\"table\", {\n        className: \"BookRecord\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Book Title\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Cover\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Author\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Publisher\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(DataState, {\n        getbooks: books,\n        onEditClick: function onEditClick(e) {\n          _this2.EditBook(e);\n        },\n        onDeleteClick: this.DeleteBook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return BooksRecord;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    books: state.books.items,\n    isFetching: state.books.isfetch\n  };\n};\n\nBooksRecord.propTypes = {\n  books: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps)(BooksRecord);","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app-V1\\src\\components\\AllBooks\\AllBookComponent.jsx"],"names":["React","Component","connect","PropTypes","DataState","LoadingState","ErrorState","BlankState","fetchBookRecord","fetchBooks","DeleteBook","EditBook","BooksRecord","props","bind","dispatch","e","preventDefault","console","log","books","isFetching","length","mapStateToProps","state","items","isfetch","propTypes","array","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport DataState from './Data';\r\nimport LoadingState from './loading';\r\nimport ErrorState from './Error';\r\nimport BlankState from './BlankState';\r\nimport {fetchBookRecord, fetchBooks, DeleteBook, EditBook } from '../../actions/index';\r\nclass BooksRecord extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.EditBook = this.EditBook.bind(this)\r\n        this.DeleteBook = this.DeleteBook.bind(this)\r\n      }\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchBookRecord());\r\n    }\r\n    DeleteBook(e) {\r\n        e.preventDefault();\r\n        console.log(\"delete\",e,)\r\n       // this.props.dispatch(DeleteBook(id));\r\n    }\r\n    EditBook(e) {\r\n      //  e.preventDefault();   \r\n        console.log(\"edit\",)\r\n\r\n    //    this.props.dispatch(EditBook(id));\r\n    }\r\n    render() {\r\n        const { books, isFetching } = this.props;\r\n        console.log(\"Main Book Component error,isfetch,items\",isFetching,books)\r\n        // if (isError) {\r\n        //     return <ErrorState/>;\r\n        // }\r\n        return (<div>\r\n            \r\n            {/* {isError && (<ErrorState />)} */}\r\n            {isFetching && books.length === 0 && <LoadingState />}\r\n            {!isFetching && books.length === 0 && <BlankState />}\r\n            {books.length > 0 && (\r\n                 <table className=\"BookRecord\">\r\n                 <thead>\r\n                     <tr>\r\n                         {/* <td>Sr No</td> */}\r\n                         <td>Book Title</td>\r\n                         <td>Cover</td>\r\n                         <td>Author</td>\r\n                         <td>Publisher</td>\r\n                         <td>Action</td>\r\n                     </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                 <DataState getbooks={books} onEditClick={(e)=>{this.EditBook(e)}} onDeleteClick={this.DeleteBook}\r\n                     />\r\n                 </tbody>\r\n             </table>\r\n               \r\n                )\r\n            }\r\n\r\n        </div>);\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    books: state.books.items,\r\n    isFetching: state.books.isfetch\r\n});\r\nBooksRecord.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    isFetching: PropTypes.bool.isRequired,\r\n}\r\nexport default connect(mapStateToProps)(BooksRecord);"]},"metadata":{},"sourceType":"module"}