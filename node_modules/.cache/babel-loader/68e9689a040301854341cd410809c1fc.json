{"ast":null,"code":"//import {createStore} from 'redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'; //import promise from 'redux-promise';\n//import createLogger from 'redux-logger';\n\nimport allReducers from '../reducers';\nimport initialState from '../API/index';\nconsole.log(JSON.stringify(initialState));\nif (localStorage.getItem(\"books\") === null) localStorage.setItem('books', JSON.stringify(initialState));else initialState = JSON.parse(localStorage.getItem('books')); //const logger = createLogger();\n\nvar store = createStore(allReducers, applyMiddleware(thunk));\nexport default store;","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app-New\\src\\store\\index.js"],"names":["createStore","applyMiddleware","thunk","allReducers","initialState","console","log","JSON","stringify","localStorage","getItem","setItem","parse","store"],"mappings":"AACA;AACA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;AACA;;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACAC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAAZ;AACA,IAAIK,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EACAD,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA6BJ,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAA7B,EADA,KAGAA,YAAY,GAAGG,IAAI,CAACK,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAf,C,CACA;;AACA,IAAMG,KAAK,GAAGb,WAAW,CACrBG,WADqB,EACTF,eAAe,CAACC,KAAD,CADN,CAAzB;AAGA,eAAeW,KAAf","sourcesContent":["\r\n//import {createStore} from 'redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n//import promise from 'redux-promise';\r\n//import createLogger from 'redux-logger';\r\nimport allReducers from '../reducers';\r\nimport initialState from '../API/index';\r\nconsole.log(JSON.stringify(initialState))\r\nif( localStorage.getItem(\"books\") === null)\r\nlocalStorage.setItem('books',JSON.stringify(initialState));\r\nelse \r\ninitialState = JSON.parse(localStorage.getItem('books'));\r\n//const logger = createLogger();\r\nconst store = createStore(\r\n    allReducers,applyMiddleware(thunk)\r\n);\r\nexport default store;"]},"metadata":{},"sourceType":"module"}