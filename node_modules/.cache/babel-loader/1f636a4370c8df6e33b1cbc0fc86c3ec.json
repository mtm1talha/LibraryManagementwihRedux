{"ast":null,"code":"import _objectSpread from \"D:\\\\Work\\\\react-redux\\\\book-management-app-New\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'BOOK_SELECTED':\n      return action.payload;\n\n    case 'ADD_BOOK':\n      console.log(state);\n\n      if (state.length >= 1) {\n        var res = state.some(function (book) {\n          return book['booktitle'] === action.payload.booktitle;\n        });\n        console.log(\"res\", res);\n        if (!res) return state.concat([action.payload]);else return _objectSpread({}, state, {\n          result: false\n        });\n      } else {\n        return state.concat([action.payload]);\n      }\n\n    // return [\n    //   ...state,\n    //   Object.assign({}, action.payload)\n    // ];\n\n    case 'DELETE_BOOK':\n      console.log(\"delete bookid\", action.id, \"state\", state);\n      var deleteresult = state.filter(function (book) {\n        return book.id !== action.id;\n      });\n      console.log(deleteresult);\n      return deleteresult;\n\n    case 'UPDATE_BOOK':\n      console.log(\"update bookid\", action.payload, \"state\", state);\n      return state.map(function (book) {\n        if (book.id === action.payload.id) {\n          console.log(\"matchedid\");\n          return _objectSpread({}, book, {\n            booktitle: action.payload.booktitle,\n            cover: action.payload.cover,\n            author: action.payload.author,\n            publisher: action.payload.publisher,\n            date: action.payload.date,\n            editing: !book.editing\n          });\n        } else return book;\n      });\n\n    case 'EDIT_BOOK':\n      return state.map(function (book) {\n        return book.id === action.id ? _objectSpread({}, book, {\n          editing: !book.editing\n        }) : book;\n      });\n    // case 'BOOKTITLE_EXIST':\n    //   let res = state.some(function (book) { return book['booktitle'] === action.payload })\n    //   console.log(\"res\", res)\n    //   return res;\n\n    default:\n      return state;\n  }\n}\n; //     switch (action.type) {\n//         case 'ADD_BOOK':\n//             return action.payload;\n//             break;\n//     }\n//     return state;\n// };","map":{"version":3,"sources":["D:\\Work\\react-redux\\book-management-app-New\\src\\reducers\\bookdetailReducer.js"],"names":["state","action","type","payload","console","log","length","res","some","book","booktitle","concat","result","id","deleteresult","filter","map","cover","author","publisher","date","editing"],"mappings":";AACA,eAAe,YAA8B;AAAA,MAApBA,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF,SAAK,UAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AACA,UAAGA,KAAK,CAACM,MAAN,IAAc,CAAjB,EAAmB;AAChB,YAAIC,GAAG,GAAGP,KAAK,CAACQ,IAAN,CAAW,UAAUC,IAAV,EAAgB;AAAE,iBAAOA,IAAI,CAAC,WAAD,CAAJ,KAAsBR,MAAM,CAACE,OAAP,CAAeO,SAA5C;AAAuD,SAApF,CAAV;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBE,GAAnB;AACA,YAAG,CAACA,GAAJ,EACD,OAAOP,KAAK,CAACW,MAAN,CAAa,CAACV,MAAM,CAACE,OAAR,CAAb,CAAP,CADC,KAEI,yBAAWH,KAAX;AAAiBY,UAAAA,MAAM,EAAC;AAAxB;AACN,OAND,MAOI;AACF,eAAOZ,KAAK,CAACW,MAAN,CAAa,CAACV,MAAM,CAACE,OAAR,CAAb,CAAP;AACD;;AACG;AACA;AACA;AACA;;AACJ,SAAK,aAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,MAAM,CAACY,EAApC,EAAwC,OAAxC,EAAiDb,KAAjD;AACA,UAAIc,YAAY,GAAGd,KAAK,CAACe,MAAN,CAAa,UAACN,IAAD;AAAA,eAAUA,IAAI,CAACI,EAAL,KAAYZ,MAAM,CAACY,EAA7B;AAAA,OAAb,CAAnB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYS,YAAZ;AACA,aAAOA,YAAP;;AACF,SAAK,aAAL;AACEV,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,MAAM,CAACE,OAApC,EAA6C,OAA7C,EAAsDH,KAAtD;AACA,aAAOA,KAAK,CAACgB,GAAN,CAAU,UAACP,IAAD,EAAU;AACzB,YAAIA,IAAI,CAACI,EAAL,KAAYZ,MAAM,CAACE,OAAP,CAAeU,EAA/B,EAAmC;AACjCT,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,mCACKI,IADL;AAEEC,YAAAA,SAAS,EAAET,MAAM,CAACE,OAAP,CAAeO,SAF5B;AAGEO,YAAAA,KAAK,EAAEhB,MAAM,CAACE,OAAP,CAAec,KAHxB;AAIEC,YAAAA,MAAM,EAAEjB,MAAM,CAACE,OAAP,CAAee,MAJzB;AAKEC,YAAAA,SAAS,EAAElB,MAAM,CAACE,OAAP,CAAegB,SAL5B;AAMEC,YAAAA,IAAI,EAAEnB,MAAM,CAACE,OAAP,CAAeiB,IANvB;AAOEC,YAAAA,OAAO,EAAE,CAACZ,IAAI,CAACY;AAPjB;AASD,SAXD,MAWO,OAAOZ,IAAP;AACR,OAbM,CAAP;;AAcF,SAAK,WAAL;AACE,aAAOT,KAAK,CAACgB,GAAN,CAAU,UAACP,IAAD;AAAA,eAAUA,IAAI,CAACI,EAAL,KAAYZ,MAAM,CAACY,EAAnB,qBAA6BJ,IAA7B;AAAmCY,UAAAA,OAAO,EAAE,CAACZ,IAAI,CAACY;AAAlD,aAA8DZ,IAAxE;AAAA,OAAV,CAAP;AACF;AACA;AACA;AACA;;AACA;AACE,aAAOT,KAAP;AA/CJ;AAiDD;AAAA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nexport default function (state = [], action) {\r\n  switch (action.type) {\r\n    case 'BOOK_SELECTED':\r\n      return action.payload;\r\n    case 'ADD_BOOK':\r\n    console.log(state);\r\n    if(state.length>=1){\r\n       let res = state.some(function (book) { return book['booktitle'] === action.payload.booktitle })\r\n       console.log(\"res\", res)\r\n       if(!res)\r\n      return state.concat([action.payload]);\r\n      else return {...state,result:false};\r\n    }\r\n    else{\r\n      return state.concat([action.payload]);\r\n    }\r\n        // return [\r\n        //   ...state,\r\n        //   Object.assign({}, action.payload)\r\n        // ];\r\n    case 'DELETE_BOOK':\r\n      console.log(\"delete bookid\", action.id, \"state\", state);\r\n      let deleteresult = state.filter((book) => book.id !== action.id);\r\n      console.log(deleteresult);\r\n      return deleteresult;\r\n    case 'UPDATE_BOOK':\r\n      console.log(\"update bookid\", action.payload, \"state\", state);\r\n      return state.map((book) => {\r\n        if (book.id === action.payload.id) {\r\n          console.log(\"matchedid\");\r\n          return {\r\n            ...book,\r\n            booktitle: action.payload.booktitle,\r\n            cover: action.payload.cover,\r\n            author: action.payload.author,\r\n            publisher: action.payload.publisher,\r\n            date: action.payload.date,\r\n            editing: !book.editing\r\n          }\r\n        } else return book;\r\n      })\r\n    case 'EDIT_BOOK':\r\n      return state.map((book) => book.id === action.id ? { ...book, editing: !book.editing } : book)\r\n    // case 'BOOKTITLE_EXIST':\r\n    //   let res = state.some(function (book) { return book['booktitle'] === action.payload })\r\n    //   console.log(\"res\", res)\r\n    //   return res;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//     switch (action.type) {\r\n//         case 'ADD_BOOK':\r\n//             return action.payload;\r\n//             break;\r\n//     }\r\n//     return state;\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}